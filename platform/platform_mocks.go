// Code generated by MockGen. DO NOT EDIT.
// Source: platform/factory.go

// Package platform is a generated GoMock package.
package platform

import (
	applications "github.com/elko-dev/spawn/applications"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPrompt is a mock of Prompt interface
type MockPrompt struct {
	ctrl     *gomock.Controller
	recorder *MockPromptMockRecorder
}

// MockPromptMockRecorder is the mock recorder for MockPrompt
type MockPromptMockRecorder struct {
	mock *MockPrompt
}

// NewMockPrompt creates a new mock instance
func NewMockPrompt(ctrl *gomock.Controller) *MockPrompt {
	mock := &MockPrompt{ctrl: ctrl}
	mock.recorder = &MockPromptMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrompt) EXPECT() *MockPromptMockRecorder {
	return m.recorder
}

// forPlatformType mocks base method
func (m *MockPrompt) forPlatformType() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "forPlatformType")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// forPlatformType indicates an expected call of forPlatformType
func (mr *MockPromptMockRecorder) forPlatformType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "forPlatformType", reflect.TypeOf((*MockPrompt)(nil).forPlatformType))
}

// MockPlatformFactory is a mock of PlatformFactory interface
type MockPlatformFactory struct {
	ctrl     *gomock.Controller
	recorder *MockPlatformFactoryMockRecorder
}

// MockPlatformFactoryMockRecorder is the mock recorder for MockPlatformFactory
type MockPlatformFactoryMockRecorder struct {
	mock *MockPlatformFactory
}

// NewMockPlatformFactory creates a new mock instance
func NewMockPlatformFactory(ctrl *gomock.Controller) *MockPlatformFactory {
	mock := &MockPlatformFactory{ctrl: ctrl}
	mock.recorder = &MockPlatformFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPlatformFactory) EXPECT() *MockPlatformFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockPlatformFactory) Create(projectName, applicationType string) (applications.PlatformRepository, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", projectName, applicationType)
	ret0, _ := ret[0].(applications.PlatformRepository)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockPlatformFactoryMockRecorder) Create(projectName, applicationType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPlatformFactory)(nil).Create), projectName, applicationType)
}
